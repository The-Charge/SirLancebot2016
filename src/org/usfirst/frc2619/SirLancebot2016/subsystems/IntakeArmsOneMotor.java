// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2619.SirLancebot2016.subsystems;

import org.usfirst.frc2619.TheChargeDashboard;
import org.usfirst.frc2619.SirLancebot2016.Robot;
import org.usfirst.frc2619.SirLancebot2016.RobotMap;
import org.usfirst.frc2619.SirLancebot2016.commands.*;
import edu.wpi.first.wpilibj.CANTalon;

import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;


/**
 *
 */
public class IntakeArmsOneMotor extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final CANTalon intakeArmMotor = RobotMap.intakeArmsOneMotorIntakeArmMotor;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    private double speed = .8;
    
    public final static double HIGH_SETPOINT_TICKS = 1100; //check this
    public final static double LOW_SETPOINT_TICKS = 45; //check this
    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }
    
    public void writeDefaultDashboardDebugValues()
    {
    	TheChargeDashboard.putNumber("IntakeArmsSpeed", speed);
    }
    public void readDashboardControlValues()
    {
    	speed = SmartDashboard.getNumber("IntakeArmsSpeed");
    }
    public void writeDashboardDebugValues()
    {
    	SmartDashboard.putNumber("IntakeArmsSpeed", Robot.oi.dragon.getY());
    }
    
    public void liftIntakeArms()
    {
    	intakeArmMotor.set(speed);
    }  
    public void lowerIntakeArms()
    {
    	intakeArmMotor.set(speed * -1);
    }
    public void setSpeed(double inputSpeed)
    {
    	speed = inputSpeed;
    }
    public double getTicks()
    {
    	double ticks = intakeArmMotor.getPosition();
    	return ticks;
    }
}

